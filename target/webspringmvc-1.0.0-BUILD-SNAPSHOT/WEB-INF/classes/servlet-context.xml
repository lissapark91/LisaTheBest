<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 이름과 url을 맵핑 -->

<!-- 	<beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"> -->
<!-- 		<beans:property name="mappings"> -->
<!-- 			<beans:value> -->
			<!-- bean id와 url을 맵핑 -->
<!-- 				/member/memberList=memberListController -->
<!-- 			</beans:value> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->
<!-- 	<beans:bean id="memberListController" class="kr.or.nextit.member.controller.MemberListController"></beans:bean> -->

<!-- 	<beans:bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></beans:bean> -->
<!-- 	<beans:bean name="/member/memberList" class="kr.or.nextit.member.controller.MemberListController"></beans:bean> -->
	
	
	<!-- Enables the Spring MVC @Controller programming model spring3점대 이후 request mapping-->
	<annotation-driven />
	
	<!-- .css, .js 등 static 자원들에 대한 핸들러 <url-pattern></url-pattern> 매핑 된 경우 default-sevlet-handler 등록 필요. -->
	<default-servlet-handler/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!--  Controller 없이 사용하는 경우. -->
	<view-controller path="/" view-name="index"/>
	
	<!-- tiles를 볼 수 있는 viewResolver 등록 -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions" value="classpath:/tiles.xml"></beans:property>
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value="2"></beans:property>
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- interceptor 등록 순서대로 처리-->
	<interceptors>
	<interceptor>
		<mapping path="/member/*"/>
		<mapping path="/board/*"/>
		<exclude-mapping path="/login/*"/>
		<exclude-mapping path="/member/memberForm"/>
		<exclude-mapping path="/member/memberList"/>
		<exclude-mapping path="/member/memberExists"/>
		<exclude-mapping path="/member/memberView"/>
		<exclude-mapping path="/board/boardList"/>
		<exclude-mapping path="/board/boardView"/>
		<beans:bean class="kr.or.nextit.web.interceptor.LoginCheckInterceptor"></beans:bean>
	</interceptor>
		<interceptor>
			<mapping path="/**"/> <!-- 모든 요청 (ant pattern 가능)-->
<!-- 			<exclude-mapping path="/member/memberList"/> -->
			<beans:bean class="kr.or.nextit.web.interceptor.ProfileInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<!-- controller bean 자동 등록 -->
	<context:component-scan base-package="kr.or.nextit" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	
	
	
</beans:beans>
